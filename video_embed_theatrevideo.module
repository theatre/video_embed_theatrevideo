<?php
/**
 * @file
 * Add a handler for theatre-video videos to Video Embed Field
 * with this module you can add videos from theatre-video.net
 */

/**
 * Implements hook_video_embed_handler_info().
 */
function video_embed_theatrevideo_video_embed_handler_info() {
  $handlers = array();
  $handlers['theatrevideo'] = array(
    'title' => 'theatre-video Video',
    'function' => 'video_embed_theatrevideo_handle_video',
    'thumbnail_function' => 'video_embed_theatrevideo_handle_thumbnail',
    'form' => 'video_embed_theatrevideo_form',
    'domains' => array(
      'theatre-video.net',
    ),
  // Defaults are the defaults to provide to your form.
    'defaults' => array(
      'width' => '640',
      'height' => '360',
    ),
  );
  return $handlers;
}

/**
 * Provide a form to configure out video settings.
 *
 * @param array $defaults
 *   default/current values for your provider, the currently saved settings
 *   with empty values filled with the defaults provided in info hook
 *
 * @return array
 *   form as defined by forms api
 */
function video_embed_theatrevideo_form($defaults) {
  $form = array();
  $form['height'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Height'),
    '#description' => t('The height of the player.'),
    '#default_value' => $defaults['height'],
    '#element_validate' => array('_video_embed_theatrevideo_element_validate'),
  );
  $form['width'] = array(
    '#type' => 'textfield',
    '#title' => t('Player Width'),
    '#description' => t('The width of the player.'),
    '#default_value' => $defaults['width'],
    '#element_validate' => array('_video_embed_theatrevideo_element_validate'),
  );
  return $form;
}

/**
 * This is the video handler (the 'function' key from handler_info).
 *
 * @param string $url
 *   the full video url
 *
 * @param array $settings
 *   an associative array of this handlers settings, from the settings form
 *
 * @return string
 *   the embed code for the video
 */
function video_embed_theatrevideo_handle_video($url, $settings) {
  $id = _video_embed_theatrevideo_get_video_id($url);
  if ($id) {
    $embed = '<iframe width="!width" height="!height"
    src="http://www.theatre-video.net/embed/!id" frameborder="0" allowfullscreen></iframe>';
    $embed = format_string($embed, array(
      '!id' => $id,
      '!width' => $settings['width'],
      '!height' => $settings['height'],
      )
    );
    $video = array(
      '#markup' => $embed,
    );
    return $video;
  }
  // Return an empty string if there is no id, so we don't have broken embeds.
  return '';
}

/**
 * Retreive the thumbnail for the theatre-video.net video.
 *
 * @param string $url
 *   the url of the video as entered by the user
 *
 * @return array
 *   an array with the keys:
 *     'id' => an id for the video which is unique to your provider
 *     'url' => the url to retrieve the thumbnail from
 */
function video_embed_theatrevideo_handle_thumbnail($url) {
  $id = _video_embed_theatrevideo_get_video_id($url);
  $thumbnail = 'http://www.theatre-video.net/video/' . $id . '?thumbnail';
  return array(
    'id' => $id,
    'url' => $thumbnail,
  );
}

/**
 * Helper function to take a theatre-video.net video url and return its id.
 *
 * @param string $url
 *   the full theatrevideo video url
 *
 * @return bool
 *   the id for the video or FALSE if there is no match
 */
function _video_embed_theatrevideo_get_video_id($url) {
  $matches = array();
  $patterns = array(
    '#theatre-video\.net/embed/([a-z\-]+)#i',
    '#theatre-video\.net/video/([a-z\-]+)#i',
  );
  foreach ($patterns as $pattern) {
    preg_match($pattern, $url, $matches);
    if ($matches && !empty($matches[1])) {
      return $matches[1];
    }
  }
  return FALSE;
}

/**
 * Function for validating width and height in setting form.
 */
function _video_embed_theatrevideo_element_validate($element, &$form_state) {
  $check = _video_embed_theatrevideo_check_input($element['#value']);
  if (!empty($element['#value']) && !$check) {
    form_error($element, t('The "!name" option must contain a valid value. You may either leave the text field empty or enter a string like "640px" or "640"', array('!name' => t($element['#title']))));
  }
}
/**
 * Helper function to check for a valid input in height and width textfields.
 *
 * @param string $input
 *   the string that contains input from setting form
 *
 * @return bool
 *   if input is valid returns true else false
 */
function _video_embed_theatrevideo_check_input($input) {
  $input = check_plain($input);
  if ($input == '') {
    return FALSE;
  }
  $size = drupal_strlen($input);
  $cur_char = '';
  for ($i = 0; $i < $size; $i++) {
    $cur_char = drupal_substr($input, $i, 1);
    if ($cur_char >= '0' && $cur_char <= '9') {
      continue;
    }
    break;
  }
  if ($i == $size) {
    return TRUE;
  }
  elseif ($i > 0 && $i == $size - 2) {
    if (drupal_substr($input, $i, 2) == 'px') {
      return TRUE;
    }
  }
  return FALSE;
}
